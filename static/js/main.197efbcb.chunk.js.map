{"version":3,"sources":["api/API.js","components/Header/Header.jsx","components/SearchInput/SearchInput.jsx","components/Navigation/Navigation.jsx","components/MovieCard/MovieCard.jsx","components/Movies/Movies.jsx","components/Footer/Footer.jsx","components/Paginator/Paginator.jsx","components/CommentForm/CommentForm.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","components/Carousel/Carousel.jsx","components/Movie/Movie.jsx","components/Actor/Actor.jsx","components/PopupContent/PopupContent.jsx","components/Popup/Popup.jsx","components/Cart/Cart.jsx","App.jsx","index.js"],"names":["API_KEY","request","endPoint","a","fetch","response","json","console","log","getData","sortKey","currentGenre","Header","setOpenCart","products","useState","newProductAdded","setNewProductAdded","useEffect","length","setInterval","className","classNames","onClick","SearchInput","inputValue","setInputValue","valueToFetch","setValueToFetch","useContext","AppContext","setUserRequest","userRequest","useCallback","f","delay","timer","args","clearTimeout","setTimeout","debounce","debouncedMovies","type","autoFocus","value","onChange","event","target","Navigation","availableGenreList","handleNavigation","setDefaultState","isVisibleInput","setIsVisibleInput","genreTitle","find","obj","id","name","hidden","map","genre","MovieCard","movie","original_title","poster_path","vote_average","handleChosenMovieId","disabled","src","alt","Movies","movies","currentPage","countPage","Fragment","Footer","Paginator","page","total","onSetCurrentPage","pages","Array","keys","index","emailValidator","CommentForm","openedForm","email","comment","errors","setError","state","setState","setComments","CommentsContext","handleChange","handleBlur","test","title","rows","onBlur","hasError","Object","values","some","error","notValid","handleButtonState","uuidv4","newComment","comments","Comment","Comments","setTagsList","setOpenComments","setOpenedForm","step","Carousel","React","memo","items","currentTag","marginLeft","setMarginLeft","carouselWidth","handleUserChoise","PopupContentContext","handleMargin","style","item","tag","profile_path","createContext","Movie","movieActorsList","closePopup","chosenMovie","setCart","cartGoodsIds","release_date","overview","genres","openComments","commentsRef","useRef","data","localStorage","getItem","JSON","parse","parseComment","current","setItem","stringify","presenceInCart","includes","Provider","Actor","actorMoviesList","biography","place_of_birth","ableToDisplay","PopupContent","toClose","actor","tagsList","setMovieActorsList","currentActor","setCurrentActor","setActorMoviesList","movieId","getMovieActorsList","then","actors","crew","job","cast","filter","actorId","personId","Promise","all","actorData","backdrop_path","Popup","popupBackground","setChosenMovie","setToClose","document","body","overflow","backgroundImage","currentTarget","Cart","showContent","setShowContent","handleShowContent","filtered","App","cart","openCart","moviesList","setMoviesList","navigationData","setNavigationData","totalPages","paginatorData","setPaginatorData","query","getUserRequest","res","results","total_pages","films","genreslist","byGenre","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.197efbcb.chunk.js","sourcesContent":["const API_KEY = '0c80bada61f7914facf2a24b8adcdf66'\n\nconst request = async (endPoint) => {\n\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/${endPoint}`)\n    const json = await response.json();\n\n    return json;  \n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n\nexport const getData = (sortKey='', currentGenre='') => {\n  return request(`discover/movie?api_key=${API_KEY}&sort_by=${sortKey}${currentGenre}&vote_count.gte=200&language=en-US`);\n};\n\nexport const getAvailableGenreList = () => request(`genre/movie/list?api_key=${API_KEY}&language=en-US`);\n\nexport const getMovieActorsList = (movieId) => request(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\nexport const getPerson = (personId) => request(`person/${personId}?api_key=${API_KEY}&language=en-US`)\n\nexport const getActorMoviesList = (actorId) => request(`person/${actorId}/movie_credits?api_key=${API_KEY}&language=en-US`)\n\nexport const getMovie = (movieId) => request(`movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\nexport const getUserRequest = (query, page=1) => request(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&sort_by=vote_average.asc&query=${query}&page=${page}&original_language=en-US`)\n\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport './Header.scss';\n\n\n\nexport const Header = ({ setOpenCart, products }) => {\n  const [newProductAdded, setNewProductAdded] = useState(false)\n\n  useEffect(() => {\n    if (!products.length) return;\n\n    setNewProductAdded(true)\n\n    setInterval(() => {\n      setNewProductAdded(false)\n    }, 2000);\n\n  }, [products.length])\n\n  return (\n    <div className=\"header\">\n\n      <h1 className=\"header__title\">Product Storage</h1>\n\n      <div\n        className={classNames(\n          'header__cart',\n          {\n            'header__cart--include-product': !!products.length,\n            'header__cart--product-added': newProductAdded,\n          }\n        )}\n        onClick={() => setOpenCart(true)}\n      >\n        <span className=\"header__cart--product-count\">{products.length}</span>\n        🛒\n      </div>\n\n    </div>\n\n\n  )\n}\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../App\";\nimport './SearchInput.scss';\n\nconst debounce = (f, delay) => {\n  let timer;\n\n  return (args) => {\n    clearTimeout(timer)\n    timer = setTimeout(f, delay, args);\n  }\n}\n\nexport const SearchInput = () => {\n\n  const [inputValue, setInputValue] = useState('')\n  const [valueToFetch, setValueToFetch] = useState('')\n\n  const { userRequest, setUserRequest } = useContext(AppContext);\n\n  const debouncedMovies = useCallback(\n    debounce(setValueToFetch, 1000)\n    , [])\n\n  debouncedMovies(inputValue)\n\n  useEffect(() => {\n    if (!valueToFetch) return;\n    setUserRequest(valueToFetch)\n  }, [valueToFetch])\n\n  return (\n    // <div className=\"search\">\n      <input\n        type=\"text\"\n        autoFocus={true}\n        className=\"search\"\n        value={inputValue}\n        onChange={(event) => {\n          setInputValue(event.target.value)\n        }}\n\n      />\n    // </div>\n  )\n}\n","import classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { SearchInput } from \"../SearchInput\";\nimport './Navigation.scss';\n\n\nexport const Navigation = ({ availableGenreList, handleNavigation, currentGenre, userRequest, setDefaultState }) => {\n\n  const [isVisibleInput, setIsVisibleInput] = useState(false)\n\n  const getGenreTitle = () => {\n    if (!currentGenre) return 'Popularity';\n    const genre = availableGenreList.find(obj => obj.id === currentGenre)\n    return genre.name;\n  }\n\n  const genreTitle = getGenreTitle();\n\n\n  return (\n    <div\n      className={classNames(\n        'navigation',\n      )}\n    >\n\n\n      \n      <div className=\"navigation__tags\">\n\n        <span\n          className={classNames(\n            'navigation__tag',\n            { 'navigation__tag--active': !userRequest }\n          )}\n          onClick={() => {\n            setIsVisibleInput(false)\n            setDefaultState()\n          }}\n        >\n          {!isVisibleInput || !userRequest ? genreTitle : 'Home Page'}\n        </span>\n        <span\n          className={classNames(\n            'navigation__tag movies__tag--user-search',\n            { 'navigation__tag--active': !!userRequest }\n          )}\n          hidden={!userRequest}\n        >\n          User Search\n        </span>\n\n\n      </div>\n\n      <div className=\"navigation__inputs\">\n        <label hidden={isVisibleInput}>\n          <span>\n            Category:\n          </span>\n          <select\n            name=\"currentGenre\"\n            value={currentGenre}\n            onChange={handleNavigation}\n          >\n            <option value='' >Popularity</option>\n            {\n              availableGenreList.map(genre => (\n                <option key={genre.id} value={genre.id}>{genre.name}</option>\n              ))\n            }\n          </select>\n        </label>\n\n\n        <label hidden={isVisibleInput}>\n          <span>\n            Sort By:\n          </span>\n          <select\n            name=\"sortKey\"\n            onChange={handleNavigation}\n          >\n            <option value='popularity.desc'>Popularity: &#8600;</option>\n            <option value=\"popularity.asc\">Popularity: &#8599;</option>\n            <option value=\"vote_average.desc\">Rating: &#8600;</option>\n            <option value=\"vote_average.asc\">Rating: &#8599;</option>\n          </select>\n        </label>\n\n        {isVisibleInput && <SearchInput />}\n\n        <span\n          className=\"navigation__input-opener\"\n          onClick={() => {\n            !isVisibleInput\n              ? setIsVisibleInput(!isVisibleInput)\n              :\n                setIsVisibleInput(!isVisibleInput)\n                setDefaultState()\n          }}>\n\n          {!isVisibleInput ? '🔍 ' : 'X'}\n        </span>\n\n      </div>\n\n    </div>\n  )\n}\n\n","import React, { useContext } from \"react\";\nimport classNames from 'classnames';\nimport './MovieCard.scss';\nimport { AppContext } from '../../App'\n\nexport const MovieCard = ({ movie }) => {\n\n  const {\n    id,\n    original_title,\n    poster_path,\n    vote_average\n  } = movie;\n\n\n  const { handleChosenMovieId } = useContext(AppContext)\n\n  return (\n\n    <li\n      disabled={!!poster_path}\n      className={classNames(\n        'movie-card',\n        {'movie-card--is-disabled': !poster_path}\n      )}\n\n      onClick={() => {\n        handleChosenMovieId(id)\n      }}\n\n    >\n      <span className=\"movie-card__ranking\">IMDB: {vote_average}</span>\n      <img\n        className={classNames(\n          'movie-card__img',\n        )}\n        src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={original_title}\n\n      />\n    </li >\n\n  )\n}\n\n","import React from \"react\";\nimport './Movies.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const Movies = ({ movies, currentPage, countPage }) => {\n\n  return (\n    <ul className=\"movies\">\n\n      {\n        !movies.length\n          ? <h1>'No Movies'</h1>\n          : (\n            movies.map(movie => (\n              <React.Fragment key={movie.id}>\n                <MovieCard\n                  movie={movie}\n                />\n              </React.Fragment>\n            ))\n          )\n\n      }\n      {\n        !!movies.length && (\n          <span className=\"movies__page-info\">\n            {`Page: ${currentPage} ${currentPage !== countPage ? `- ${countPage}` : ''}`}\n          </span>\n        )\n      }\n    </ul>\n  )\n}\n\n","import React from \"react\";\nimport './Footer.scss';\n\nexport const Footer = () => {\n\n  return (\n    <div className=\"footer\">Footer</div>\n  )\n}\n\n","import React from \"react\";\nimport './Paginator.scss';\n\n\nconst handleButtons = (page, total) => {\n\n  if (total <= 6) {\n    return total === 1\n      ? []\n      : [...Array(total).keys()].map(index => ++index);\n  }\n\n  if (page <= 4 || page >= total - 3) {\n    return page <= 4\n      ? [1, 2, 3, 4, 5, false, total]\n      : [1, false, total - 4, total - 3, total - 2, total - 1, total]\n  }\n\n  return [1, false, page - 1, page, page + 1, false, total - 1]\n}\n\nexport const Paginator = ({ countPage, currentPage, onSetCurrentPage }) => {\n\n\n  const pages = handleButtons(currentPage, countPage)\n\n  return (\n    <div className=\"paginator\">\n      <div className=\"paginator__extra\">\n        <button\n          className=\"paginator__button\"\n          disabled={currentPage < 20}\n          value={currentPage - 10}\n          onClick={onSetCurrentPage}\n        >\n          {\"< 10\"}\n        </button>\n        <button\n          className=\"paginator__button\"\n          disabled={currentPage < 150}\n          value={currentPage - 100}\n          onClick={onSetCurrentPage}\n        >\n          {\"< 100\"}\n        </button>\n\n        <button\n          className=\"paginator__button\"\n          disabled={countPage - 150 < currentPage}\n          value={currentPage + 100}\n          onClick={onSetCurrentPage}\n        >\n          {\"100 >\"}\n        </button>\n\n        <button\n          className=\"paginator__button\"\n          disabled={countPage - 20 < currentPage}\n          value={currentPage + 10}\n          onClick={onSetCurrentPage}\n\n        >\n          {\"10 >\"}\n        </button>\n      </div>\n\n      <div className=\"paginator__basic\">\n\n        <button\n          className=\"paginator__button paginator__button--left \"\n          disabled={currentPage === 1}\n          value={currentPage - 1}\n          onClick={onSetCurrentPage}\n        >\n          {\"<\"}\n        </button>\n\n        {\n          pages.map((page, index) => {\n            return <button\n              className=\"paginator__button\"\n              key={index}\n              disabled={page === currentPage || !page}\n              value={page}\n              onClick={onSetCurrentPage}\n\n            >\n              {page === false ? '...' : page}\n            </button>\n          })\n        }\n        <button\n          className=\"paginator__button paginator__button--right\"\n          disabled={currentPage === countPage}\n          value={currentPage + 1}\n          onClick={onSetCurrentPage}\n\n        \n        >\n          {\">\"}\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\n","import React, { useState, useContext } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\nimport './CommentForm.scss';\nimport { CommentsContext } from '../Movie';\n\nconst emailValidator = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const CommentForm = ({ openedForm }) => {\n\n  const [errors, setError] = useState({\n    name: '',\n    email: '',\n    comment: '',\n  })\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    comment: '',\n  })\n\n  const setComments = useContext(CommentsContext);\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setError(errors => ({ ...errors, [name]: '' }))\n\n    setState(state => ({ ...state, [name]: value }))\n\n\n  }\n  const handleBlur = (event) => {\n    const { name, value } = event.target;\n\n    if (value.length < 4 || name === 'email' && !emailValidator.test(value)) {\n      console.log(emailValidator.test(value), name);\n      const title = name === 'email' ? 'not valid' : 'min length errors';\n      setError(errors => ({ ...errors, [name]: title }));\n    }\n  }\n  const handleButtonState = () => {\n    const hasError = Object.values(errors).some(error => !!error);\n    const notValid = Object.values(state).some(state => !state);\n\n    return hasError || notValid;\n  }\n  const handleSubmit = () => {\n    const id = uuidv4()\n    const newComment = { id, ...state }\n\n    // console.log(newComment);\n    setComments(comments => ([...comments, newComment]))\n    setState({\n      name: '',\n      email: '',\n      comment: '',\n    })\n  }\n\n  const { name, email, comment } = state;\n  return (\n    <div className={classNames(\n      'comment-form',\n      { 'comment-form--opened': openedForm }\n    )}>\n      <div className=\"comment-form__textarea\">\n        <span className=\"comment-form__input-title\">\n          {`Comment: ${errors.comment}`}\n        </span>\n        <textarea\n          name=\"comment\"\n          className={classNames(\n            \"comment-form__text-field\",\n            { \"error\": !!errors.comment }\n          )}\n          rows=\"5\"\n          value={comment}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        ></textarea>\n\n      </div>\n\n      <div className=\"comment-form__inputs\">\n        <label className=\"comment-form__input-title\">\n          {`User: ${errors.name}`}\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={classNames(\n              \"comment-form__input\",\n              { \"error\": !!errors.name }\n            )}\n            value={name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </label>\n\n        <label className=\"comment-form__input-title\">\n          {`Email: ${errors.email}`}\n          <input\n            type=\"text\"\n            name=\"email\"\n\n            className={classNames(\n              \"comment-form__input\",\n              { \"error\": !!errors.email }\n            )}\n            value={email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </label>\n\n        <button\n          className=\"comment-form__button\"\n          disabled={handleButtonState()}\n          onClick={handleSubmit}\n        >\n          Comment\n        </button>\n\n      </div>\n\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport classNames from 'classnames';\nimport './Comment.scss';\n\nexport const Comment = ({ comment, name, email }) => {\n\n  return (\n    <li className=\"comment\">\n      <p className=\"comment__text\">{comment}</p>\n      <span className=\"comment__user-info\">\n        <span>{name}</span>\n        <span>{email}</span>\n      </span>\n\n    </li>\n  )\n}\n\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport classNames from 'classnames';\nimport './Comments.scss';\nimport { CommentForm } from \"../CommentForm\";\nimport { Comment } from \"../Comment\";\n\nexport const Comments = ({ setTagsList, comments=[], setOpenComments }) => {\n\n  const [openedForm, setOpenedForm] = useState(false)\n\n\n  useEffect(() => {\n    setTagsList(state => ({...state, comments: true}))\n    return () => setTagsList(state => ({...state, comments: false}))\n  },[])\n\n\n  return (\n    <div className=\"comments\">\n      <span\n        className=\"comments__closer\"\n        onClick={() => setOpenComments(false)}\n      >\n        &#x2715;\n      </span>\n      <ul className=\"comments__text\">\n        {\n          !comments.length\n            ? <h2>No Comments</h2>\n            : comments.map(comment => (\n              <React.Fragment key={comment.id}>\n                <Comment {...comment} />\n              </React.Fragment>\n            ))\n        }\n      </ul>\n      <button\n        className=\"comments__opener\"\n        onClick={() => setOpenedForm(!openedForm)}\n      >\n        {openedForm ? 'Close Form' : 'Send Comment'}\n      </button>\n      {openedForm && <CommentForm openedForm={openedForm} />}\n    </div>\n  )\n}\n\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { PopupContentContext } from '../PopupContent';\nimport './Carousel.scss';\n\nconst step = 290;\n\n\n// const debaunce = (func) => {\n//   let timer;\n//   return () => {\n//     clearTimeout(timer)\n//     timer = setTimeout((arg) => {\n//       window.addEventListener('resize', () => {\n//         func(document.getElementsByClassName('carousel__box-items')[0].offsetWidth)\n//       })\n//     }, 6000);\n//   }\n// }\n\n\n\nexport const Carousel = React.memo(({ items, currentTag }) => {\n\n\n  const [marginLeft, setMarginLeft] = useState(0)\n  const [carouselWidth, setCarouselWidth] = useState(0)\n\n  const { handleUserChoise } = useContext(PopupContentContext)\n\n  const handleMargin = (event) => {\n    const { value } = event.target;\n\n    if (marginLeft + +value) {\n      setMarginLeft()\n    }\n    const totalLength = step * items.length;\n    const marginLimit = totalLength - step * 4\n    const margin = +value + marginLeft\n    setMarginLeft(marginLeft + +value)\n  }\n\n\n  // const test = useCallback(debaunce(setCarouselWidth, 1000))\n\n  // useEffect(() => {\n\n  //   test()\n  // })\n\n  return (\n    <div className=\"carousel\">\n      <button\n        className=\"carousel__button carousel__button--prev\"\n        value={-step}\n        hidden={items.length * step <= carouselWidth}\n        // disabled={test()}\n        onClick={handleMargin}\n      >\n        {'<'}\n      </button>\n      <div className=\"carousel__box-items\">\n        <ul\n          className=\"carousel__items\"\n          style={{ marginLeft }}\n        >\n          {\n            !!items && items.map(item => (\n              <li\n                className=\"carousel__item\"\n                onClick={() => handleUserChoise({ id: item.id, tag: currentTag })}\n                key={item.id}\n              >\n                <img src={`https://image.tmdb.org/t/p/w200/${item.profile_path || item.poster_path}`} alt={item.title || item.title} />\n                <h3 >{item.name || ''}</h3>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <button\n        className=\"carousel__button carousel__button--next\"\n        // disabled={}\n        value={step}\n        onClick={handleMargin}\n      >\n        {'>'}\n      </button>\n    </div>\n  )\n})\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { AppContext } from '../../App';\nimport { Comments } from '../Comments'\nimport { Carousel } from \"../Carousel\";\nimport './Movie.scss';\n\nexport const CommentsContext = React.createContext();\n\n\nexport const Movie = ({ movieActorsList, setTagsList, closePopup }) => {\n\n  const { chosenMovie, handleNavigation, setCart, cartGoodsIds } = useContext(AppContext);\n\n  const {\n    id,\n    poster_path,\n    release_date,\n    vote_average,\n    original_title,\n    overview,\n    genres\n  } = chosenMovie;\n\n  const [comments, setComments] = useState(null);\n  const [openComments, setOpenComments] = useState(false)\n  const commentsRef = useRef()\n\n  useEffect(() => {\n    const data = localStorage.getItem('data');\n    const comments = JSON.parse(data)\n\n    setComments(comments[id] || [])\n\n    return () => {\n      const data = localStorage.getItem('data');\n      const parseComment = JSON.parse(data)\n\n      parseComment[id] = commentsRef.current;\n      localStorage.setItem('data', JSON.stringify(parseComment))\n    }\n  }, [])\n\n  useEffect(() => {\n    commentsRef.current = comments;\n  }, [comments])\n\n  const presenceInCart = cartGoodsIds.includes(id)\n\n  return (\n    <div className=\"movie\">\n      <div className=\"movie__promo\">\n        <img src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={poster_path} />\n\n        <span>\n          {`relise: ${release_date}`}\n        </span>\n        <span>\n          {`IMDB: ${vote_average}`}\n        </span>\n\n        <span>\n          Price: 10$\n        </span>\n\n        <button\n          className={classNames(\n            'movie__buy-button',\n            { 'movie__buy-button--disabled': presenceInCart }\n          )}\n          onClick={() => {\n            closePopup()\n            setCart(state => ([...state, chosenMovie]))\n          }}\n        >\n          {presenceInCart ? 'Вже в корині' : 'Add to Cart'}\n        </button>\n      </div>\n\n      <div className=\"movie__further-details\">\n        <div className=\"movie__about\">\n          {openComments\n            ? (\n              <CommentsContext.Provider value={setComments}>\n                <Comments\n                  comments={comments}\n                  setTagsList={setTagsList}\n                  setOpenComments={setOpenComments}\n                />\n              </CommentsContext.Provider>\n            )\n\n            : (\n              <div className=\"movie__info\">\n\n                <h2 className=\"movie__title\">\n                  {original_title}\n                </h2>\n                <div className=\"movie__overview\">\n                  {overview}\n                </div>\n                <div className=\"movie__genres\">\n                  <h3>Genres:</h3>\n                  <ul>\n                    {\n                      genres.map(genre => (\n                        <li\n                          className=\"movie__genre\"\n                          key={genre.id}\n                          onClick={() => {\n                            handleNavigation({\n                              target: {\n                                name: 'currentGenre', value: genre.id\n                              }\n                            })\n                            closePopup()\n                          }}\n                        >\n                          {genre.name}\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </div>\n                <span\n                  className=\"movie__comments\"\n                  onClick={() => {\n                    setTagsList(state => ({ ...state, comments: true }))\n                    setOpenComments(!openComments)\n                  }}\n\n                >\n                  comments...\n                </span>\n              </div>\n            )\n          }\n        </div>\n        {!openComments && <Carousel items={movieActorsList} />}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Carousel } from \"../Carousel\";\nimport './Actor.scss';\n\n\nexport const Actor = ({\n  actorMoviesList,\n  profile_path,\n  name,\n  biography,\n  place_of_birth,\n  ableToDisplay\n}) => {\n\n\n  return <>\n    <div className=\"actor\">\n      <div className=\"actor__promo\">\n        <img src={`https://image.tmdb.org/t/p/w300/${profile_path}`} alt={'image'} />\n        <div className=\"actor__short-info\">\n          <h2 className=\"actor__name\">\n            {name}\n          </h2>\n          <span>{place_of_birth}</span>\n        </div>\n\n      </div>\n\n      <div className=\"actor__further-details\">\n        <div className=\"actor__info\">\n\n\n          <div className=\"actor__biography\">\n            {biography}\n          </div>\n        </div>\n        {ableToDisplay && <Carousel items={actorMoviesList} currentTag='movie'/>}\n      </div>\n    </div>\n\n  </>\n}\n\n","\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { getMovieActorsList, getPerson, getActorMoviesList, getMovie } from '../../api/API'\nimport { AppContext } from '../../App';\nimport classNames from 'classnames';\nimport './PopupContent.scss';\nimport { Movie } from \"../Movie\";\nimport { Actor } from '../Actor';\n\n\n\nexport const PopupContentContext = React.createContext();\n\n\nexport const PopupContent = ({ toClose, closePopup }) => {\n\n  const [tagsList, setTagsList] = useState({\n    movie: true,\n    actor: false,\n    comments: false\n  })\n\n  const [movieActorsList, setMovieActorsList] = useState([])\n  const [currentActor, setCurrentActor] = useState(null)\n  const [actorMoviesList, setActorMoviesList] = useState([])\n\n  const {  id: movieId, handleChosenMovieId } = useContext(AppContext);\n\n\n  useEffect(() => {\n\n    getMovieActorsList(movieId)\n      .then(data => {\n        const director = data.crew.find(obj => obj.job === 'Director')\n        const actors = [director, ...data.cast].filter(actor => !!actor.profile_path)\n        setMovieActorsList(actors);\n      })\n  }, [movieId])\n\n  const handleUserChoise = (data) => {\n    const { id, tag } = data;\n    if (tag === 'movie') {\n      handleChosenMovieId(id)\n      setTagsList(state => ({...state, movie: true, actor: false}))\n      return;\n    }\n\n\n    Promise.all([getPerson(id), getActorMoviesList(id)])\n      .then(data => {\n        const actorData = data[0];\n        const actorMoviesList = data[1].cast.filter(movie => movie.backdrop_path && movie.poster_path);\n        \n        setTagsList({ ...tagsList, actor: true, movie: false })\n        setCurrentActor(actorData)\n        setActorMoviesList(actorMoviesList)\n      })\n  }\n\n  return (\n\n    <div\n      className={classNames(\n        \"popup-content\",\n        { 'popup__to-close': toClose }\n      )}\n    >\n      <button\n        type=\"button\"\n        hidden={tagsList.comments}\n        className={classNames(\n          'popup-content__tag-button',\n          'popup-content__tag-button--movie',\n          { 'popup-content__tag-button--active': tagsList.movie }\n        )}\n        onClick={() => setTagsList({ ...tagsList, movie: true })}\n      >\n        movie\n      </button>\n      <button\n        type=\"button\"\n        hidden={tagsList.comments || !tagsList.actor}\n        className={classNames(\n          'popup-content__tag-button',\n          'popup-content__tag-button--actor',\n          { 'popup-content__tag-button--active': tagsList.actor && !tagsList.movie }\n        )}\n        onClick={() => setTagsList({ ...tagsList, movie: false, actor: true })}\n\n      >\n        actor\n      </button>\n      <div\n        className=\"popup-content--closer\"\n        onClick={() => closePopup()}\n      >\n        &#x2715;\n      </div>\n\n      <PopupContentContext.Provider\n        value={{\n          handleUserChoise,\n          movieActorsList,\n        }}\n      >\n        {\n          tagsList.movie\n            ? <Movie\n\n              movieActorsList={movieActorsList}\n              setTagsList={setTagsList}\n\n              closePopup={closePopup}\n            />\n            : <Actor\n              ableToDisplay={!tagsList.comments}\n              {...currentActor}\n              closePopup={closePopup}\n              actorMoviesList={actorMoviesList}\n            />\n        }\n      </PopupContentContext.Provider>\n\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport './Popup.scss';\nimport { PopupContent } from '../PopupContent';\n\n\nexport const Popup = ({ popupBackground, setChosenMovie, handleChosenMovieId }) => {\n\n  const [toClose, setToClose] = useState(false)\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => document.body.style.overflow = 'unset';\n  }, [])\n\n  const closePopup = (id) => {\n    setTimeout(() => {\n      if (!id) {\n        setChosenMovie(null)\n        return;\n      }\n      handleChosenMovieId(id)\n    }, 500);\n\n    setToClose(true)\n  }\n\n  return (\n    <div\n      className={classNames(\n        \"popup\",\n        { 'popup__to-close': toClose }\n      )}\n      style={{ backgroundImage : `url(https://image.tmdb.org/t/p/w780${popupBackground})` }}\n      onClick={(event) => {\n        const { target, currentTarget } = event;\n        if (target !== currentTarget) return;\n        closePopup()\n      }}\n    >\n      <PopupContent\n        toClose={toClose}\n        closePopup={closePopup}\n      />\n    </div>\n  )\n}\n","import classNames from \"classnames\";\nimport React, { useState, useEffect } from \"react\";\nimport { MovieCard } from \"../MovieCard\";\nimport './Cart.scss';\n\n\nexport const Cart = ({ setOpenCart, movies, setCart }) => {\n\n  const [showContent, setShowContent] = useState(false)\n\n  useEffect(() => {\n    setShowContent(true)\n    document.body.style.overflow = 'hidden';\n    return () => document.body.style.overflow = 'unset';\n  }, [])\n\n  const handleShowContent = (event) => {\n    if (event.target !== event.currentTarget) return;\n    setShowContent(false)\n\n    setTimeout(() => {\n      setOpenCart(false)\n    }, 1000);\n  }\n\n  console.log();\n\n  return (\n    <div\n      className=\"cart\"\n      onClick={handleShowContent}\n      \n    >\n      <div className={classNames(\n        'cart__content',\n        {\n          'cart__content--is-open': showContent,\n          'cart__include-product': !!movies.length\n        }\n      )}\n      // style={{backgroundImage: `url(https://image.tmdb.org/t/p/w780${movies[0].backdrop_path})`}}\n\n      >\n        <div\n          className=\"cart__close-cross\"\n          onClick={handleShowContent}\n        >\n          X\n        </div>\n\n        <div className=\"cart__title\">Movies</div>\n        <div\n          className=\"cart__movies\"\n          >\n\n          {\n            movies.map(movie => (\n              <div className=\"cart__movie\">\n                <span\n                  className=\"cart__movie--remove\"\n                  onClick={() => {\n                    const filtered = movies.filter(obj => obj.id !== movie.id)\n                    setCart(filtered)\n                  }}\n                >\n                  remove\n                </span>\n                < MovieCard movie={movie} />\n\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"cart__client-field\">123</div>\n\n\n      </div>\n\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { getData, getAvailableGenreList, getMovie, getUserRequest } from './api/API';\nimport { Header } from './components/Header';\nimport { Navigation } from './components/Navigation';\nimport { Movies } from './components/Movies';\nimport { Footer } from './components/Footer';\nimport { Paginator } from './components/Paginator/Paginator';\nimport { Popup } from './components/Popup';\nimport { Cart } from './components/Cart';\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n\n  const [cart, setCart] = useState([]);\n  const [openCart, setOpenCart] = useState(false)\n\n  const [userRequest, setUserRequest] = useState('')\n\n  const [moviesList, setMoviesList] = useState([])\n  const [chosenMovie, setChosenMovie] = useState(null);\n  const [navigationData, setNavigationData] = useState({\n    currentGenre: '',\n    availableGenreList: [],\n    sortKey: 'popularity.desc',\n  })\n  const [paginatorData, setPaginatorData] = useState({\n    totalPages: 0,\n    currentPage: 1,\n  })\n\n  const { currentGenre, availableGenreList, sortKey } = navigationData;\n  const { totalPages, currentPage } = paginatorData;\n\n  useEffect(() => {\n    if (!userRequest) return;\n    getUserRequest(userRequest, currentPage)\n      .then(res => {\n        setMoviesList(res.results.filter(obj => !!obj.poster_path))\n        setPaginatorData({ ...paginatorData, totalPages: res.total_pages })\n      })\n  }, [userRequest, currentPage])\n\n  useEffect(() => {\n    Promise.all([getData(sortKey), getAvailableGenreList()]).then(data => {\n      const [films, genreslist] = data;\n      setPaginatorData(state => ({ ...state, totalPages: films.total_pages }))\n      setNavigationData(state => ({ ...state, availableGenreList: genreslist.genres }))\n      setMoviesList(films.results);\n    })\n\n    localStorage.setItem('data', JSON.stringify({}));\n  }, [])\n\n  useEffect(() => {\n    if (!moviesList.length || !!userRequest.length) return;\n    const byGenre = !!currentGenre ? `&with_genres=${currentGenre}` : '';\n\n    getData(sortKey, `${byGenre}&page=${currentPage}`)\n      .then(data => {\n        setPaginatorData({ ...paginatorData, totalPages: data.total_pages });\n        setMoviesList(data.results);\n      })\n  }, [currentGenre, sortKey, currentPage, userRequest]);\n\n\n  const setDefaultState = () => {\n    setUserRequest('');\n    setPaginatorData({ ...paginatorData, currentPage: 1 })\n\n  }\n\n  const handleChosenMovieId = (id) => {\n    getMovie(id).then(setChosenMovie);\n  }\n\n  const handleNavigation = (event) => {\n    const { name, value } = event.target;\n\n    setNavigationData({ ...navigationData, [name]: +value || value });\n    setPaginatorData(({ ...paginatorData, currentPage: 1 }));\n  }\n\n  const handlePaginator = (event) => {\n    const { value } = event.target\n    setPaginatorData(state => ({ ...state, currentPage: +value }))\n  }\n\n  const cartGoodsIds = cart.map(obj => obj.id)\n\n\n  return (\n    <AppContext.Provider value={{\n      handleNavigation,\n      setChosenMovie,\n      ...chosenMovie,\n      chosenMovie,\n      handleChosenMovieId,\n      userRequest,\n      setUserRequest,\n      setDefaultState,\n      setCart,\n      cartGoodsIds,\n    }}>\n      <div className=\"App\">\n        {openCart && <Cart\n          openCart={openCart}\n          setOpenCart={setOpenCart}\n          setCart={setCart}\n          movies={cart}\n        />}\n        {\n          !!chosenMovie && <Popup\n            setChosenMovie={setChosenMovie}\n            popupBackground={chosenMovie.backdrop_path}\n            handleChosenMovieId={handleChosenMovieId}\n\n          />\n        }\n        <Header\n          setUserRequest={setUserRequest}\n          setOpenCart={setOpenCart}\n          products={cart}\n\n        />\n        <div className=\"main\">\n          {\n            <Navigation\n              currentGenre={currentGenre}\n              availableGenreList={availableGenreList}\n              handleNavigation={handleNavigation}\n              userRequest={userRequest}\n              setDefaultState={setDefaultState}\n            />\n\n          }\n          {\n            !!moviesList.length && (\n              <Movies\n                countPage={totalPages}\n                currentPage={currentPage}\n                userRequest={userRequest}\n                setDefaultState={setDefaultState}\n                movies={moviesList}\n              />\n            )\n          }\n\n        </div>\n        {\n          !!moviesList.length && (\n            <Paginator\n              countPage={totalPages}\n              currentPage={currentPage}\n              onSetCurrentPage={handlePaginator}\n            />\n          )\n        }\n        <Footer />\n      </div>\n    </AppContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}