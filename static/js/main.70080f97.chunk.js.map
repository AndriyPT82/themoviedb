{"version":3,"sources":["api/API.js","components/SearchInput/SearchInput.jsx","components/Navigation/Navigation.jsx","components/Header/Header.jsx","components/Card/Card.jsx","components/Movies/Movies.jsx","components/Footer/Footer.jsx","components/Paginator/Paginator.jsx","components/CommentForm/CommentForm.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","components/Carousel/Carousel.jsx","components/Movie/Movie.jsx","components/Actor/Actor.jsx","components/PopupContent/PopupContent.jsx","components/Popup/Popup.jsx","components/Cart/Cart.jsx","App.jsx","index.js"],"names":["API_KEY","request","endPoint","a","fetch","response","json","console","log","getData","sortKey","currentGenre","SearchInput","useState","inputValue","setInputValue","valueToFetch","setValueToFetch","useContext","AppContext","setUserRequest","userRequest","useCallback","f","delay","timer","args","clearTimeout","setTimeout","debounce","debouncedMovies","useEffect","type","autoFocus","className","value","onChange","event","target","Navigation","availableGenreList","handleNavigation","setDefaultState","isVisibleInput","setIsVisibleInput","genreTitle","find","obj","id","name","classNames","onClick","hidden","map","genre","Header","setOpenCart","products","newProductAdded","setNewProductAdded","length","setInterval","Card","movie","original_title","poster_path","vote_average","handleChosenMovieId","disabled","toFixed","src","alt","Movies","movies","currentPage","countPage","Fragment","Footer","href","Paginator","page","total","onSetCurrentPage","pages","Array","keys","index","emailValidator","CommentForm","openedForm","email","comment","errors","setError","state","setState","setComments","CommentsContext","handleChange","handleBlur","test","title","rows","onBlur","hasError","Object","values","some","error","notValid","handleButtonState","uuidv4","newComment","comments","Comment","Comments","setTagsList","setOpenComments","setOpenedForm","Carousel","React","memo","items","currentTag","handleUserChoise","PopupContentContext","item","tag","profile_path","createContext","Movie","movieActorsList","closePopup","chosenMovie","setCart","cartGoodsIds","release_date","overview","genres","openComments","commentsRef","useRef","data","localStorage","getItem","JSON","parse","parseComment","current","setItem","stringify","presenceInCart","includes","Provider","Actor","actorMoviesList","biography","place_of_birth","PopupContent","toClose","actor","tagsList","setMovieActorsList","currentActor","setCurrentActor","setActorMoviesList","movieId","getMovieActorsList","then","actors","crew","job","cast","filter","actorId","personId","Promise","all","actorData","backdrop_path","Popup","popupBackground","setChosenMovie","setToClose","document","body","style","overflow","backgroundImage","currentTarget","Cart","showContent","setShowContent","totalPrice","setTotalPrice","reduce","count","handleShowContent","filtered","alert","App","cart","openCart","moviesList","setMoviesList","navigationData","setNavigationData","totalPages","paginatorData","setPaginatorData","query","getUserRequest","res","results","total_pages","films","genreslist","byGenre","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70080f97.chunk.js","sourcesContent":["const API_KEY = '0c80bada61f7914facf2a24b8adcdf66'\n\nconst request = async (endPoint) => {\n\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/${endPoint}`)\n    const json = await response.json();\n\n    return json;  \n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n\nexport const getData = (sortKey='', currentGenre='') => {\n  return request(`discover/movie?api_key=${API_KEY}&sort_by=${sortKey}${currentGenre}&vote_count.gte=200&language=en-US`);\n};\n\nexport const getAvailableGenreList = () => request(`genre/movie/list?api_key=${API_KEY}&language=en-US`);\n\nexport const getMovieActorsList = (movieId) => request(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\nexport const getPerson = (personId) => request(`person/${personId}?api_key=${API_KEY}&language=en-US`)\n\nexport const getActorMoviesList = (actorId) => request(`person/${actorId}/movie_credits?api_key=${API_KEY}&language=en-US`)\n\nexport const getMovie = (movieId) => request(`movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\nexport const getUserRequest = (query, page=1) => request(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&sort_by=vote_average.asc&query=${query}&page=${page}&original_language=en-US`)\n\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../App\";\nimport './SearchInput.scss';\n\nconst debounce = (f, delay) => {\n  let timer;\n\n  return (args) => {\n    clearTimeout(timer)\n    timer = setTimeout(f, delay, args);\n  }\n}\n\nexport const SearchInput = () => {\n\n  const [inputValue, setInputValue] = useState('')\n  const [valueToFetch, setValueToFetch] = useState('')\n\n  const { userRequest, setUserRequest } = useContext(AppContext);\n\n  const debouncedMovies = useCallback(\n    debounce(setValueToFetch, 1000)\n    , [])\n\n  debouncedMovies(inputValue)\n\n  useEffect(() => {\n    if (!valueToFetch) return;\n    setUserRequest(valueToFetch)\n  }, [valueToFetch])\n\n  return (\n    // <div className=\"search\">\n      <input\n        type=\"text\"\n        autoFocus={true}\n        className=\"search\"\n        value={inputValue}\n        onChange={(event) => {\n          setInputValue(event.target.value)\n        }}\n\n      />\n    // </div>\n  )\n}\n","import classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { SearchInput } from \"../SearchInput\";\nimport './Navigation.scss';\n\n\nexport const Navigation = ({ availableGenreList, handleNavigation, currentGenre, userRequest, setDefaultState }) => {\n\n  const [isVisibleInput, setIsVisibleInput] = useState(false)\n\n  const getGenreTitle = () => {\n    if (!currentGenre) return 'Popularity';\n    const genre = availableGenreList.find(obj => obj.id === currentGenre)\n    return genre.name;\n  }\n\n  const genreTitle = getGenreTitle();\n\n\n  return (\n    <div\n      className={classNames(\n        'navigation',\n      )}\n    >\n      <div className=\"navigation__tags\">\n        <span\n          className={classNames(\n            'navigation__tag',\n            { 'navigation__tag--active': !userRequest }\n          )}\n          onClick={() => {\n            setIsVisibleInput(false)\n            setDefaultState()\n          }}\n        >\n          {!isVisibleInput || !userRequest ? genreTitle : 'Home Page'}\n        </span>\n        <span\n          className={classNames(\n            'navigation__tag movies__tag--user-search',\n            { 'navigation__tag--active': !!userRequest }\n          )}\n          hidden={!userRequest}\n        >\n          User Search\n        </span>\n\n\n      </div>\n\n      <div className=\"navigation__inputs\">\n        <label hidden={isVisibleInput}>\n          <span>\n            Category:\n          </span>\n          <select\n            name=\"currentGenre\"\n            value={currentGenre}\n            onChange={handleNavigation}\n          >\n            <option value='' >Popularity</option>\n            {\n              (availableGenreList || []).map(genre => (\n                <option key={genre.id} value={genre.id}>{genre.name}</option>\n              ))\n            }\n          </select>\n        </label>\n\n\n        <label hidden={isVisibleInput}>\n          <span>\n            Sort By:\n          </span>\n          <select\n            name=\"sortKey\"\n            onChange={handleNavigation}\n          >\n            <option value='popularity.desc'>Popularity: &#8600;</option>\n            <option value=\"popularity.asc\">Popularity: &#8599;</option>\n            <option value=\"vote_average.desc\">Rating: &#8600;</option>\n            <option value=\"vote_average.asc\">Rating: &#8599;</option>\n          </select>\n        </label>\n\n        {isVisibleInput && <SearchInput />}\n\n        <span\n          className=\"navigation__input-opener\"\n          onClick={() => {\n            !isVisibleInput\n              ? setIsVisibleInput(!isVisibleInput)\n              :\n                setIsVisibleInput(!isVisibleInput)\n                setDefaultState()\n          }}>\n\n          {!isVisibleInput ? '🔍 ' : 'X'}\n        </span>\n\n      </div>\n\n    </div>\n  )\n}\n\n","import React, { useContext, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport './Header.scss';\n\n\n\nimport { AppContext } from \"../../App\";\nimport { Navigation } from '../Navigation';\n\n\n\n\n\n\nexport const Header = ({ setOpenCart, products }) => {\n  const [newProductAdded, setNewProductAdded] = useState(false)\n\n\n  const {\n    currentGenre,\n    availableGenreList,\n    setDefaultState,\n    handleNavigation,\n    userRequest\n\n  } = useContext(AppContext)\n\n\n\n\n  useEffect(() => {\n    if (!products.length) return;\n\n    setNewProductAdded(true)\n\n    setInterval(() => {\n      setNewProductAdded(false)\n    }, 2000);\n\n  }, [products.length])\n\n  return (\n    <div className=\"header\">\n\n      <h1 className=\"header__title\">Movie Store</h1>\n\n      <div\n        className={classNames(\n          'header__cart',\n          {\n            'header__cart--include-product': !!products.length,\n            'header__cart--product-added': newProductAdded,\n          }\n        )}\n        onClick={() => setOpenCart(true)}\n      >\n        <span className=\"header__cart--product-count\">{products.length}</span>\n        🛒\n      </div>\n      <Navigation\n        currentGenre={currentGenre}\n        availableGenreList={availableGenreList}\n        handleNavigation={handleNavigation}\n        userRequest={userRequest}\n        setDefaultState={setDefaultState}\n      />\n\n    </div>\n\n\n  )\n}\n","import React, { useContext } from \"react\";\nimport classNames from 'classnames';\nimport './Card.scss';\nimport { AppContext } from '../../App'\n\nexport const Card = ({ movie }) => {\n\n  const {\n    id,\n    original_title,\n    poster_path,\n    vote_average\n  } = movie;\n\n  const { handleChosenMovieId } = useContext(AppContext)\n\n  return (\n    <li\n      disabled={!!poster_path}\n      className={classNames(\n        'card',\n        { 'card--is-disabled': !poster_path }\n      )}\n      onClick={() => {\n        handleChosenMovieId(id)\n      }}\n    >\n      <span className=\"card__price\"> $ {(vote_average * 3).toFixed(2)}</span>\n      <span className=\"card__ranking\">IMDB: {vote_average}</span>\n      <img\n        className={classNames(\n          'card__img',\n        )}\n        src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={original_title}\n      />\n    </li >\n\n  )\n}\n\n","import React from \"react\";\nimport './Movies.scss';\nimport { Card } from '../Card';\n\nexport const Movies = ({ movies, currentPage, countPage }) => {\n\n  return (\n    <ul className=\"movies\">\n\n      {\n        !movies.length\n          ? <h1>'No Movies'</h1>\n          : (\n            movies.map(movie => (\n              <React.Fragment key={movie.id}>\n                <Card\n                  movie={movie}\n                />\n              </React.Fragment>\n            ))\n          )\n\n      }\n      {\n        !!movies.length && (\n          <span className=\"movies__page-info\">\n            {`Page: ${currentPage} ${currentPage !== countPage ? `- ${countPage}` : ''}`}\n          </span>\n        )\n      }\n    </ul>\n  )\n}\n\n","import React from \"react\";\nimport './Footer.scss';\n\nexport const Footer = () => {\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__about-author\">\n        <span>Andriy Ivanyk</span>\n\n        <div className=\"footer__social-media\">\n          <a\n            href=\"https://www.facebook.com/andriy.ivanyk.3\"\n            className=\"footer__icon\"\n          >\n            <img src=\"https://cdn-icons-png.flaticon.com/512/124/124010.png\" alt=\"\" />\n          </a>\n          <a\n            href=\"https://github.com/AndriyPT82?tab=repositories\"\n            className=\"footer__icon\"\n          >\n            <img src=\"https://cdn4.iconfinder.com/data/icons/socialcones/508/Github-512.png\" alt=\"\" />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/andriy-ivanyk-06057a1b8/\"\n            className=\"footer__icon\"\n          >\n            <img src=\"https://cdn2.iconfinder.com/data/icons/social-media-2285/512/1_Linkedin_unofficial_colored_svg-512.png\" alt=\"\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport './Paginator.scss';\n\n\nconst handleButtons = (page, total) => {\n\n  if (total <= 6) {\n    return total === 1\n      ? []\n      : [...Array(total).keys()].map(index => ++index);\n  }\n\n  if (page <= 4 || page >= total - 3) {\n    return page <= 4\n      ? [1, 2, 3, 4, 5, false, total]\n      : [1, false, total - 4, total - 3, total - 2, total - 1, total]\n  }\n\n  return [1, false, page - 1, page, page + 1, false, total - 1]\n}\n\nexport const Paginator = ({ countPage, currentPage, onSetCurrentPage }) => {\n\n\n  const pages = handleButtons(currentPage, countPage)\n\n  return (\n    <div className=\"paginator\">\n      <div className=\"paginator__extra\">\n        <button\n          className=\"paginator__button\"\n          disabled={currentPage < 20}\n          value={currentPage - 10}\n          onClick={onSetCurrentPage}\n        >\n          {\"< 10\"}\n        </button>\n        <button\n          className=\"paginator__button\"\n          disabled={currentPage < 150}\n          value={currentPage - 100}\n          onClick={onSetCurrentPage}\n        >\n          {\"< 100\"}\n        </button>\n\n        <button\n          className=\"paginator__button\"\n          disabled={countPage - 150 < currentPage}\n          value={currentPage + 100}\n          onClick={onSetCurrentPage}\n        >\n          {\"100 >\"}\n        </button>\n\n        <button\n          className=\"paginator__button\"\n          disabled={countPage - 20 < currentPage}\n          value={currentPage + 10}\n          onClick={onSetCurrentPage}\n        >\n          {\"10 >\"}\n        </button>\n      </div>\n      <div className=\"paginator__basic\">\n        <button\n          className=\"paginator__button paginator__button--left \"\n          disabled={currentPage === 1}\n          value={currentPage - 1}\n          onClick={onSetCurrentPage}\n        >\n          {\"<\"}\n        </button>\n        {\n          pages.map((page, index) => {\n            return <button\n              className=\"paginator__button\"\n              key={index}\n              disabled={page === currentPage || !page}\n              value={page}\n              onClick={onSetCurrentPage}\n            >\n              {page === false ? '...' : page}\n            </button>\n          })\n        }\n        <button\n          className=\"paginator__button paginator__button--right\"\n          disabled={currentPage === countPage}\n          value={currentPage + 1}\n          onClick={onSetCurrentPage}\n        >\n          {\">\"}\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\n","import React, { useState, useContext } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\nimport './CommentForm.scss';\nimport { CommentsContext } from '../Movie';\n\nconst emailValidator = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const CommentForm = ({ openedForm }) => {\n\n  const [errors, setError] = useState({\n    name: '',\n    email: '',\n    comment: '',\n  })\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    comment: '',\n  })\n\n  const setComments = useContext(CommentsContext);\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setError(errors => ({ ...errors, [name]: '' }))\n\n    setState(state => ({ ...state, [name]: value }))\n\n\n  }\n  const handleBlur = (event) => {\n    const { name, value } = event.target;\n\n    if (value.length < 4 || name === 'email' && !emailValidator.test(value)) {\n      console.log(emailValidator.test(value), name);\n      const title = name === 'email' ? 'not valid' : 'min length errors';\n      setError(errors => ({ ...errors, [name]: title }));\n    }\n  }\n  const handleButtonState = () => {\n    const hasError = Object.values(errors).some(error => !!error);\n    const notValid = Object.values(state).some(state => !state);\n\n    return hasError || notValid;\n  }\n  const handleSubmit = () => {\n    const id = uuidv4()\n    const newComment = { id, ...state }\n\n    // console.log(newComment);\n    setComments(comments => ([...comments, newComment]))\n    setState({\n      name: '',\n      email: '',\n      comment: '',\n    })\n  }\n\n  const { name, email, comment } = state;\n  return (\n    <div className={classNames(\n      'comment-form',\n      { 'comment-form--opened': openedForm }\n    )}>\n      <div className=\"comment-form__textarea\">\n        <span className=\"comment-form__input-title\">\n          {`Comment: ${errors.comment}`}\n        </span>\n        <textarea\n          name=\"comment\"\n          className={classNames(\n            \"comment-form__text-field\",\n            { \"error\": !!errors.comment }\n          )}\n          rows=\"5\"\n          value={comment}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        ></textarea>\n\n      </div>\n\n      <div className=\"comment-form__inputs\">\n        <label className=\"comment-form__input-title\">\n          {`User: ${errors.name}`}\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={classNames(\n              \"comment-form__input\",\n              { \"error\": !!errors.name }\n            )}\n            value={name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </label>\n\n        <label className=\"comment-form__input-title\">\n          {`Email: ${errors.email}`}\n          <input\n            type=\"text\"\n            name=\"email\"\n\n            className={classNames(\n              \"comment-form__input\",\n              { \"error\": !!errors.email }\n            )}\n            value={email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </label>\n\n        <button\n          className=\"comment-form__button\"\n          disabled={handleButtonState()}\n          onClick={handleSubmit}\n        >\n          Comment\n        </button>\n\n      </div>\n\n    </div>\n  )\n}\n","import React from \"react\";\nimport './Comment.scss';\n\nexport const Comment = ({ comment, name, email }) => {\n\n  return (\n    <li className=\"comment\">\n      <p className=\"comment__text\">{comment}</p>\n      <span className=\"comment__user-info\">\n        <span>{name}</span>\n        <span>{email}</span>\n      </span>\n\n    </li>\n  )\n}\n\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport './Comments.scss';\nimport { CommentForm } from \"../CommentForm\";\nimport { Comment } from \"../Comment\";\n\nexport const Comments = ({ setTagsList, comments = [], setOpenComments }) => {\n\n  const [openedForm, setOpenedForm] = useState(false)\n\n  useEffect(() => {\n    setTagsList(state => ({ ...state, comments: true }))\n    return () => setTagsList(state => ({ ...state, comments: false }))\n  }, [])\n\n  return (\n    <div className=\"comments\">\n      <span\n        className=\"comments__closer\"\n        onClick={() => setOpenComments(false)}\n      >\n        &#x2715;\n      </span>\n      <ul className=\"comments__text\">\n        {\n          !comments.length\n            ? <h2>No Comments</h2>\n            : comments.map(comment => (\n              <React.Fragment key={comment.id}>\n                <Comment {...comment} />\n              </React.Fragment>\n            ))\n        }\n      </ul>\n      <button\n        className=\"comments__opener\"\n        onClick={() => setOpenedForm(!openedForm)}\n      >\n        {openedForm ? 'Close Form' : 'Send Comment'}\n      </button>\n      {openedForm && <CommentForm openedForm={openedForm} />}\n    </div>\n  )\n}\n\n","import React, { useState, useContext } from \"react\";\nimport { PopupContentContext } from '../PopupContent';\nimport './Carousel.scss';\n\nexport const Carousel = React.memo(({ items, currentTag }) => {\n\n  const { handleUserChoise } = useContext(PopupContentContext)\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel__box-items\">\n        <ul className=\"carousel__items\">\n          {\n            !!items && items.map(item => (\n              <li\n                className=\"carousel__item\"\n                onClick={() => handleUserChoise({ id: item.id, tag: currentTag })}\n                key={item.id}\n              >\n                <img src={`https://image.tmdb.org/t/p/w200/${item.profile_path || item.poster_path}`} alt={item.title || item.title} />\n                <h3 >{item.name || ''}</h3>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  )\n})\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { AppContext } from '../../App';\nimport { Comments } from '../Comments'\nimport { Carousel } from \"../Carousel\";\nimport './Movie.scss';\n\nexport const CommentsContext = React.createContext();\n\nexport const Movie = ({ movieActorsList, setTagsList, closePopup }) => {\n\n  const { chosenMovie, handleNavigation, setCart, cartGoodsIds } = useContext(AppContext);\n  const {\n    id,\n    poster_path,\n    release_date,\n    vote_average,\n    original_title,\n    overview,\n    genres\n  } = chosenMovie;\n\n  const [comments, setComments] = useState(null);\n  const [openComments, setOpenComments] = useState(false)\n  const commentsRef = useRef()\n\n  useEffect(() => {\n    const data = localStorage.getItem('data');\n    const comments = JSON.parse(data)\n\n    setComments(comments[id] || [])\n\n    return () => {\n      const data = localStorage.getItem('data');\n      const parseComment = JSON.parse(data)\n\n      parseComment[id] = commentsRef.current;\n      localStorage.setItem('data', JSON.stringify(parseComment))\n    }\n  }, [])\n\n  useEffect(() => {\n    commentsRef.current = comments;\n  }, [comments])\n\n  const presenceInCart = cartGoodsIds.includes(id)\n\n  return (\n    <div className=\"movie\">\n      <div className=\"movie__promo\">\n        <img src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={poster_path} />\n\n        <span>\n          {`relise: ${release_date}`}\n        </span>\n        <span>\n          {`IMDB: ${vote_average}`}\n        </span>\n\n        <span>\n          Price: {(vote_average * 3).toFixed(2)}$\n        </span>\n\n        <button\n          className={classNames(\n            'movie__buy-button',\n            { 'movie__buy-button--disabled': presenceInCart }\n          )}\n          onClick={() => {\n            closePopup()\n            setCart(state => ([...state, chosenMovie]))\n          }}\n        >\n          {presenceInCart ? 'In Cart' : 'Add to Cart'}\n        </button>\n      </div>\n\n      <div className=\"movie__further-details\">\n        <div className=\"movie__about\">\n          {openComments\n            ? (\n              <CommentsContext.Provider value={setComments}>\n                <Comments\n                  comments={comments}\n                  setTagsList={setTagsList}\n                  setOpenComments={setOpenComments}\n                />\n              </CommentsContext.Provider>\n            )\n\n            : (\n              <div className=\"movie__info\">\n\n                <h2 className=\"movie__title\">\n                  {original_title}\n                </h2>\n                <div className=\"movie__overview\">\n                  {overview}\n                </div>\n                <div className=\"movie__genres\">\n                  <h3>Genres:</h3>\n                  <ul>\n                    {\n                      genres.map(genre => (\n                        <li\n                          className=\"movie__genre\"\n                          key={genre.id}\n                          onClick={() => {\n                            handleNavigation({\n                              target: {\n                                name: 'currentGenre', value: genre.id\n                              }\n                            })\n                            closePopup()\n                          }}\n                        >\n                          {genre.name}\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </div>\n                <span\n                  className=\"movie__comments\"\n                  onClick={() => {\n                    setTagsList(state => ({ ...state, comments: true }))\n                    setOpenComments(!openComments)\n                  }}\n\n                >\n                  comments...\n                </span>\n              </div>\n            )\n          }\n        </div>\n        {!movieActorsList.length ||!openComments&& <Carousel items={movieActorsList} />}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Carousel } from \"../Carousel\";\nimport './Actor.scss';\n\nexport const Actor = ({\n  actorMoviesList,\n  profile_path,\n  name,\n  biography,\n  place_of_birth,\n}) => {\n\n  return <>\n    <div className=\"actor\">\n      <div className=\"actor__promo\">\n        <img src={`https://image.tmdb.org/t/p/w300/${profile_path}`} alt={'image'} />\n        <div className=\"actor__short-info\">\n          <h2 className=\"actor__name\">\n            {name}\n          </h2>\n          <span>{place_of_birth}</span>\n        </div>\n      </div>\n\n      <div className=\"actor__further-details\">\n        <div className=\"actor__info\">\n          <div className=\"actor__biography\">\n            {biography}\n          </div>\n        </div>\n        {!!actorMoviesList.length && <Carousel items={actorMoviesList} currentTag='movie'/>}\n      </div>\n    </div>\n\n  </>\n}\n\n","\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { getMovieActorsList, getPerson, getActorMoviesList, getMovie } from '../../api/API'\nimport { AppContext } from '../../App';\nimport classNames from 'classnames';\nimport './PopupContent.scss';\nimport { Movie } from \"../Movie\";\nimport { Actor } from '../Actor';\n\nexport const PopupContentContext = React.createContext();\n\nexport const PopupContent = ({ toClose, closePopup }) => {\n\n  const [tagsList, setTagsList] = useState({\n    movie: true,\n    actor: false,\n    comments: false\n  })\n\n  const [movieActorsList, setMovieActorsList] = useState([])\n  const [currentActor, setCurrentActor] = useState(null)\n  const [actorMoviesList, setActorMoviesList] = useState([])\n\n  const {  id: movieId, handleChosenMovieId } = useContext(AppContext);\n\n  useEffect(() => {\n    getMovieActorsList(movieId)\n      .then(data => {\n        const director = data.crew.find(obj => obj.job === 'Director')\n        const actors = [director, ...data.cast].filter(actor => !!actor.profile_path)\n        setMovieActorsList(actors);\n      })\n  }, [movieId])\n\n  const handleUserChoise = (data) => {\n    const { id, tag } = data;\n    if (tag === 'movie') {\n      handleChosenMovieId(id)\n      setTagsList(state => ({...state, movie: true, actor: false}))\n      return;\n    }\n\n\n    Promise.all([getPerson(id), getActorMoviesList(id)])\n      .then(data => {\n        const actorData = data[0];\n        const actorMoviesList = data[1].cast.filter(movie => movie.backdrop_path && movie.poster_path);\n        \n        setTagsList({ ...tagsList, actor: true, movie: false })\n        setCurrentActor(actorData)\n        setActorMoviesList(actorMoviesList)\n      })\n  }\n\n  return (\n    <div\n      className={classNames(\n        \"popup-content\",\n        { 'popup__to-close': toClose }\n      )}\n    >\n      <button\n        type=\"button\"\n        hidden={tagsList.comments}\n        className={classNames(\n          'popup-content__tag-button',\n          'popup-content__tag-button--movie',\n          { 'popup-content__tag-button--active': tagsList.movie }\n        )}\n        onClick={() => setTagsList({ ...tagsList, movie: true })}\n      >\n        movie\n      </button>\n      <button\n        type=\"button\"\n        hidden={tagsList.comments || !tagsList.actor}\n        className={classNames(\n          'popup-content__tag-button',\n          'popup-content__tag-button--actor',\n          { 'popup-content__tag-button--active': tagsList.actor && !tagsList.movie }\n        )}\n        onClick={() => setTagsList({ ...tagsList, movie: false, actor: true })}\n      >\n        actor\n      </button>\n      <div\n        className=\"popup-content--closer\"\n        onClick={() => closePopup()}\n      >\n        &#x2715;\n      </div>\n\n      <PopupContentContext.Provider\n        value={{\n          handleUserChoise,\n          movieActorsList,\n        }}\n      >\n        {\n          tagsList.movie\n            ? <Movie\n              movieActorsList={movieActorsList}\n              setTagsList={setTagsList}\n              closePopup={closePopup}\n            />\n            : <Actor\n              {...currentActor}\n              closePopup={closePopup}\n              actorMoviesList={actorMoviesList}\n            />\n        }\n      </PopupContentContext.Provider>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport './Popup.scss';\nimport { PopupContent } from '../PopupContent';\n\n\nexport const Popup = ({ popupBackground, setChosenMovie, handleChosenMovieId }) => {\n\n  const [toClose, setToClose] = useState(false)\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => document.body.style.overflow = 'unset';\n  }, [])\n\n  const closePopup = (id) => {\n    setTimeout(() => {\n      if (!id) {\n        setChosenMovie(null)\n        return;\n      }\n      handleChosenMovieId(id)\n    }, 500);\n\n    setToClose(true)\n  }\n\n  return (\n    <div\n      className={classNames(\n        \"popup\",\n        { 'popup__to-close': toClose }\n      )}\n      style={{ backgroundImage: `url(https://image.tmdb.org/t/p/w780${popupBackground})` }}\n      onClick={(event) => {\n        const { target, currentTarget } = event;\n        if (target !== currentTarget) return;\n        closePopup()\n      }}\n    >\n      <PopupContent\n        toClose={toClose}\n        closePopup={closePopup}\n      />\n    </div>\n  )\n}\n","import classNames from \"classnames\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card\";\nimport './Cart.scss';\n\n\nexport const Cart = ({ setOpenCart, movies, setCart }) => {\n\n  const [showContent, setShowContent] = useState(false);\n  const [totalPrice, setTotalPrice] = useState();\n\n  useEffect(() => {\n    setShowContent(true)\n    document.body.style.overflow = 'hidden';\n    return () => document.body.style.overflow = 'unset';\n  }, []);\n\n  useEffect(() => {\n    if (!movies.length) return;\n    const total = movies.reduce((count, obj) => {\n      const moviePrice = +(obj.vote_average * 3).toFixed(2);\n      count += moviePrice\n      return count;\n    }, 0);\n\n    setTotalPrice(total);\n  }, [movies])\n\n  const handleShowContent = (event) => {\n    if (event.target !== event.currentTarget) return;\n    setShowContent(false)\n\n    setTimeout(() => {\n      setOpenCart(false)\n    }, 500);\n  }\n\n  return (\n    <div\n      className=\"cart\"\n      onClick={handleShowContent}\n    >\n      <div className={classNames(\n        'cart__content',\n        {\n          'cart__content--is-open': showContent,\n          'cart__include-product': !!movies.length\n        }\n      )}\n      >\n        <div\n          className=\"cart__close-cross\"\n          onClick={handleShowContent}\n        >\n          X\n        </div>\n\n        <div className=\"cart__title\">Movies</div>\n        <div\n          className=\"cart__movies\"\n        >\n          {\n            !movies.length\n              ? <span className=\"cart__empty\">Cart is Empty</span>\n              : movies.map(movie => (\n                <div\n                  className=\"cart__movie\"\n                  key={movie.id}\n                >\n                  <span\n                    className=\"cart__cancel\"\n                    onClick={(event) => {\n                      const filtered = movies.filter(obj => obj.id !== movie.id)\n                      setCart(filtered)\n                      !filtered.length && handleShowContent(event);\n                    }}\n                  >\n                    x\n                  </span>\n                  < Card movie={movie} />\n\n                </div>\n              ))\n          }\n        </div>\n        <div className=\"cart__client-field\">\n          <div className=\"cart__client-field--info\">\n            <span className=\"cart__goods-count\">Movies count: {movies.length}</span>\n            <span className=\"cart__total-price\"> Total: ${totalPrice}</span>\n          </div>\n          <button\n            className=\"cart__button-pay\"\n            disabled={!movies.length}\n            onClick={(event) => {\n              setCart([])\n              alert('Thank you for shopping')\n              handleShowContent(event);\n            }}\n          >\n            PAY\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { getData, getAvailableGenreList, getMovie, getUserRequest } from './api/API';\nimport { Header } from './components/Header';\nimport { Movies } from './components/Movies';\nimport { Footer } from './components/Footer';\nimport { Paginator } from './components/Paginator/Paginator';\nimport { Popup } from './components/Popup';\nimport { Cart } from './components/Cart';\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n\n  const [cart, setCart] = useState([]);\n  const [openCart, setOpenCart] = useState(false)\n  const [userRequest, setUserRequest] = useState('')\n\n  const [moviesList, setMoviesList] = useState([])\n  const [chosenMovie, setChosenMovie] = useState(null);\n  const [navigationData, setNavigationData] = useState({\n    currentGenre: '',\n    availableGenreList: [],\n    sortKey: 'popularity.desc',\n  })\n  const [paginatorData, setPaginatorData] = useState({\n    totalPages: 0,\n    currentPage: 1,\n  })\n\n  const { currentGenre, availableGenreList, sortKey } = navigationData;\n  const { totalPages, currentPage } = paginatorData;\n\n  useEffect(() => {\n    if (!userRequest) return;\n    getUserRequest(userRequest, currentPage)\n      .then(res => {\n        setMoviesList(res.results.filter(obj => !!obj.poster_path))\n        setPaginatorData({ ...paginatorData, totalPages: res.total_pages })\n      })\n  }, [userRequest, currentPage])\n\n  useEffect(() => {\n    Promise.all([getData(sortKey), getAvailableGenreList()]).then(data => {\n      const [films, genreslist] = data;\n      setPaginatorData(state => ({ ...state, totalPages: films.total_pages }))\n      setNavigationData(state => ({ ...state, availableGenreList: genreslist.genres }))\n      setMoviesList(films.results);\n    })\n\n    localStorage.setItem('data', JSON.stringify({}));\n  }, [])\n\n  useEffect(() => {\n    if (!!userRequest.length) return;\n    const byGenre = !!currentGenre ? `&with_genres=${currentGenre}` : '';\n\n    getData(sortKey, `${byGenre}&page=${currentPage}`)\n      .then(data => {\n        setPaginatorData({ ...paginatorData, totalPages: data.total_pages });\n        setMoviesList(data.results);\n      })\n  }, [navigationData, currentPage, userRequest]);\n\n\n  const setDefaultState = () => {\n    setUserRequest('');\n    setPaginatorData({ ...paginatorData, currentPage: 1 })\n\n  }\n\n  const handleChosenMovieId = (id) => {\n    getMovie(id).then(setChosenMovie);\n  }\n\n  const handleNavigation = (event) => {\n    const { name, value } = event.target;\n    setNavigationData({ ...navigationData, [name]: +value || value });\n    setPaginatorData(({ ...paginatorData, currentPage: 1 }));\n  }\n\n  const handlePaginator = (event) => {\n    const { value } = event.target\n    setPaginatorData(state => ({ ...state, currentPage: +value }))\n  }\n\n  const cartGoodsIds = cart.map(obj => obj.id)\n\n  return (\n    <AppContext.Provider value={{\n      handleNavigation,\n      setChosenMovie,\n      ...chosenMovie,\n      chosenMovie,\n      handleChosenMovieId,\n      userRequest,\n      setUserRequest,\n      setDefaultState,\n      setCart,\n      cartGoodsIds,\n\n      currentGenre,\n      availableGenreList,\n      setDefaultState,\n    }}>\n      <div className=\"App\">\n        {openCart && <Cart\n          openCart={openCart}\n          setOpenCart={setOpenCart}\n          setCart={setCart}\n          movies={cart}\n        />}\n        {\n          !!chosenMovie && <Popup\n            setChosenMovie={setChosenMovie}\n            popupBackground={chosenMovie.backdrop_path}\n            handleChosenMovieId={handleChosenMovieId}\n\n          />\n        }\n        <Header\n          setUserRequest={setUserRequest}\n          setOpenCart={setOpenCart}\n          products={cart}\n\n        />\n        <div className=\"main\">\n          {\n            <Movies\n              countPage={totalPages}\n              currentPage={currentPage}\n              userRequest={userRequest}\n              setDefaultState={setDefaultState}\n              movies={moviesList}\n            />\n          }\n          {\n            totalPages > 1 && (\n              <Paginator\n                countPage={totalPages}\n                currentPage={currentPage}\n                onSetCurrentPage={handlePaginator}\n              />\n            )\n          }\n\n        </div>\n        <Footer />\n      </div>\n    </AppContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}